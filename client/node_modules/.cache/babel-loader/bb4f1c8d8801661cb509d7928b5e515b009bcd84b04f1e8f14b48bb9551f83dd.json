{"ast":null,"code":"var _jsxFileName = \"/Users/suyogbala/Documents/codinglanguages/python.py/F1-rental/client/src/Components/Student/Student.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"./Student.css\";\nimport StudentApartmentCard from \"../StudentApartmentCard/StudentApartmentCard\";\nimport SearchBar from \"../SearchBar/SearchBar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Student = () => {\n  _s();\n  const [filteredApartments, setFilteredApartments] = useState([]);\n\n  // Fetch apartments when component mounts\n  useEffect(() => {\n    const fetchApartments = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/listings`);\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          // Prepend the image URL with the server path\n          const updatedData = data.map(apartment => {\n            var _apartment$images, _apartment$specificat;\n            return {\n              ...apartment,\n              image: `${process.env.REACT_APP_API_BASE_URL}/api/listings/uploads/${(_apartment$images = apartment.images) === null || _apartment$images === void 0 ? void 0 : _apartment$images[0]}`,\n              // Assuming 'images' contains filenames\n              specifications: (_apartment$specificat = apartment.specifications) !== null && _apartment$specificat !== void 0 ? _apartment$specificat : [] // Default empty array for specifications\n            };\n          });\n          setApartments(updatedData); // Set apartments with updated image URL\n        } else {\n          console.error(\"Received data is not an array\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching apartments:\", error);\n      }\n    };\n    fetchApartments();\n  }, []);\n  const handleSearch = query => {\n    const results = apartments.filter(apartment => apartment.address.toLowerCase().includes(query.toLowerCase()));\n    setFilteredApartments(results);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"student-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"student-welcome\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome Students!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Find the best apartments near your university, tailored to your needs.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"student-apartments\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Available Apartments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"apartments-grid\",\n        children: (filteredApartments.length > 0 ? filteredApartments : apartments).map((apartment, index) => /*#__PURE__*/_jsxDEV(StudentApartmentCard, {\n          ...apartment\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(Student, \"KXm22zeuzTErKZJYUP5c9ZY33Ts=\");\n_c = Student;\nexport default Student;\nvar _c;\n$RefreshReg$(_c, \"Student\");","map":{"version":3,"names":["React","useState","useEffect","StudentApartmentCard","SearchBar","jsxDEV","_jsxDEV","Student","_s","filteredApartments","setFilteredApartments","fetchApartments","response","fetch","process","env","REACT_APP_API_BASE_URL","data","json","Array","isArray","updatedData","map","apartment","_apartment$images","_apartment$specificat","image","images","specifications","setApartments","console","error","handleSearch","query","results","apartments","filter","address","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","length","index","_c","$RefreshReg$"],"sources":["/Users/suyogbala/Documents/codinglanguages/python.py/F1-rental/client/src/Components/Student/Student.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./Student.css\";\nimport StudentApartmentCard from \"../StudentApartmentCard/StudentApartmentCard\";\nimport SearchBar from \"../SearchBar/SearchBar\";\n\nconst Student = () => {\n  const [filteredApartments, setFilteredApartments] = useState([]);\n\n  // Fetch apartments when component mounts\n  useEffect(() => {\n    const fetchApartments = async () => {\n      try {\n        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/listings`);\n        const data = await response.json();\n  \n        if (Array.isArray(data)) {\n          // Prepend the image URL with the server path\n          const updatedData = data.map((apartment) => ({\n            ...apartment,\n            image: `${process.env.REACT_APP_API_BASE_URL}/api/listings/uploads/${apartment.images?.[0]}`, // Assuming 'images' contains filenames\n            specifications: apartment.specifications ?? [], // Default empty array for specifications\n          }));\n          setApartments(updatedData); // Set apartments with updated image URL\n        } else {\n          console.error(\"Received data is not an array\", data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching apartments:\", error);\n      }\n    };\n  \n    fetchApartments();\n  }, []);\n\n  const handleSearch = (query) => {\n    const results = apartments.filter((apartment) =>\n      apartment.address.toLowerCase().includes(query.toLowerCase())\n    );\n    setFilteredApartments(results);\n  };\n\n  return (\n    <div className=\"student-page\">\n      {/* Welcome Section */}\n      <section className=\"student-welcome\">\n        <h1>Welcome Students!</h1>\n        <p>Find the best apartments near your university, tailored to your needs.</p>\n      </section>\n\n      {/* Search Bar */}\n      <SearchBar onSearch={handleSearch} />\n\n      {/* Apartments Section */}\n      <section className=\"student-apartments\">\n        <h2>Available Apartments</h2>\n        <div className=\"apartments-grid\">\n          {(filteredApartments.length > 0 ? filteredApartments : apartments).map(\n            (apartment, index) => (\n              <StudentApartmentCard key={index} {...apartment} />\n            )\n          )}\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default Student;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}